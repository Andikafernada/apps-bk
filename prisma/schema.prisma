
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      String
  avatarId  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  cases     Case[]    @relation("CounselorToCase")
  treatments Treatment[] @relation("CounselorToTreatment")
}

model Student {
  id          String   @id @default(cuid())
  nis         String   @unique
  name        String
  class       String
  major       String
  jenjang     String
  tahunAjaran String
  jenisKelamin String
  avatarId    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cases       Case[]
}

model Case {
  id          String    @id @default(cuid())
  studentId   String
  student     Student   @relation(fields: [studentId], references: [id])
  kode_kasus  String
  anamnesa    String    @db.Text
  status      String    // Active, Closed, Archived
  counselorId String
  counselor   User      @relation("CounselorToCase", fields: [counselorId], references: [id])
  lastMeeting DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  treatments  Treatment[]
}

model Treatment {
  id                 String   @id @default(cuid())
  caseId             String
  case               Case     @relation(fields: [caseId], references: [id])
  tanggal_pertemuan  DateTime
  description        String   @db.Text
  counselorId        String
  counselor          User     @relation("CounselorToTreatment", fields: [counselorId], references: [id])
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
